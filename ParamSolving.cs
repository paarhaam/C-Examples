using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;

namespace Purdue.Agrawal.Distillation
{
    /// <summary>
    /// Parameters to limit algorithm solving the problem
    /// or general outputs
    /// </summary>
    public class ParamSolving
    {
        // Should change some discrete options into C# enums. 
        // Much better for naming and documenting individual values.
        // In matlab, test casting the enum field to int.
        // Need GUI to choose from enum values (DevExpress grid cell editor).
        // These revisions would also encompass Instance.ProbEnum or take advantage of code related to it.

        public ParamSolving()
        {
            //MaxTime = 600; // will generalize
            ParameterSets.SetDefaults(this);
        }

        // GAMSPath can't be used

        // Note double? is syntax for Nullable<double>

        [Description("Maximum cputime that solver is allowed to use for convergence, seconds")]
        [DefaultValue(600)]
        public double? MaxTime;

        [Description("Relative gap below which differences in bounds can be attributed to numerical precision error.")]
        [DefaultValue(1E-6)]
        public double? BoundTol;

        [Description("{0,1} to {not supply,supply} initial guess generated by MATLAB")]
        [DefaultValue(0)]
        public int? InitialGuess;

        [Description("{0,1} for {two-phase,liquid only} sidedraw")]
        [DefaultValue(1)]
        public int? LSD;

        [Description("Minimum fraction of main feed flow for any component present in any stream or split specific flow")]
        [DefaultValue(1E-4)]
        public double? MinFrac;

        [Description("Type of objective function to be minimized.  1: vapor duty, 2: total cost with minimal exchanger duty, 3: total cost with two phase exchanger streams")]
        [DefaultValue(1)]
        public int? ObjType;

        [Description("Solver to be used (e.g. baron, anitgone, scip)")]
        [DefaultValue("baron")]
        public string SolverName;

        [Description("Type of solving.  1: obtain global minimum 2: feasibility of inital guess 3: upload to GAMS")]
        [DefaultValue(1)]
        public int? SolveType;

        [Description("Termination criterion for duality gap relative to lower bound.  Affects relaxation and convergence.  Decimal fraction of 1.")]
        [DefaultValue(0.01)]
        public double? Tol;

        [Description("Underwood root tolerance. There is a case where 1E-3 yields 3% higher vapor duty.")]
        [DefaultValue(1E-4)]
        public double? URTol;

        // Note that Nullable<int> (same as int? ) fields default to null.

        [Description("For MINLP, maximum number of solutions")]
        public int? MaxSol;

        [Description("For MINLP, maximum number of sloppy splits")]
        public int? MaxSloppySplit;

        [Description("For MINLP, maximum number of thermal couplings")]
        public int? MaxTherCoup;

        [Description("For MINLP, maximum number of submixtures")]
        public int? MaxSubmix;
    }
}
